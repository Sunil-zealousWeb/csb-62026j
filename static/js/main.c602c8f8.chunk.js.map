{"version":3,"sources":["component/Wrapper.js","component/Button.js","component/ButtonBox.js","component/Screen.js","component/Calculator.js","App.js","index.js"],"names":["Wrapper","children","className","Button","btn","value","calc","setCalc","commaClick","num","toString","includes","resetClick","sign","res","signClick","equalsClick","a","b","x","persenClick","invertClick","onClick","results","C","numberValue","numberString","Number","handleClickButton","ButtonBox","Screen","max","btnValues","Calculator","useState","flat","map","i","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.c602c8f8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Wrapper = ({ children }) => {\r\n  return <div className=\"wrapper\">{children}</div>;\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\n\r\nconst getStyleName = (btn) => {\r\n  const className = {\r\n    \"=\": \"equals\",\r\n    x: \"opt\",\r\n    \"-\": \"opt\",\r\n    \"+\": \"opt\",\r\n    \"/\": \"opt\"\r\n  };\r\n  return className[btn];\r\n};\r\n\r\nconst Button = ({ value, calc, setCalc }) => {\r\n  // const { calc, setCalc } = useContext(CalcContext);\r\n\r\n  // User click comma\r\n  const commaClick = () => {\r\n    setCalc({\r\n      ...calc,\r\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num\r\n    });\r\n  };\r\n  // User click C\r\n  const resetClick = () => {\r\n    setCalc({ sign: \"\", num: 0, res: 0 });\r\n  };\r\n  // User click number\r\n  const handleClickButton = () => {\r\n    const numberString = value.toString();\r\n\r\n    let numberValue;\r\n    if (numberString === \"0\" && calc.num === 0) {\r\n      numberValue = \"0\";\r\n    } else {\r\n      numberValue = Number(calc.num + numberString);\r\n    }\r\n\r\n    setCalc({\r\n      ...calc,\r\n      num: numberValue\r\n    });\r\n  };\r\n  // User click operation\r\n  const signClick = () => {\r\n    setCalc({\r\n      sign: value,\r\n      res: !calc.res && calc.num ? calc.num : calc.res,\r\n      num: 0\r\n    });\r\n  };\r\n  // User click equals\r\n  const equalsClick = () => {\r\n    if (calc.res && calc.num) {\r\n      const math = (a, b, sign) => {\r\n        const result = {\r\n          \"+\": (a, b) => a + b,\r\n          \"-\": (a, b) => a - b,\r\n          x: (a, b) => a * b,\r\n          \"/\": (a, b) => a / b\r\n        };\r\n        return result[sign](a, b);\r\n      };\r\n      setCalc({\r\n        res: math(calc.res, calc.num, calc.sign),\r\n        sign: \"\",\r\n        num: 0\r\n      });\r\n    }\r\n  };\r\n  // User click persen\r\n  const persenClick = () => {\r\n    setCalc({\r\n      num: calc.num / 100,\r\n      res: calc.res / 100,\r\n      sign: \"\"\r\n    });\r\n  };\r\n  // User click invert button\r\n  const invertClick = () => {\r\n    setCalc({\r\n      num: calc.num ? calc.num * -1 : 0,\r\n      res: calc.res ? calc.res * -1 : 0,\r\n      sign: \"\"\r\n    });\r\n  };\r\n\r\n  const handleBtnClick = () => {\r\n    const results = {\r\n      \".\": commaClick,\r\n      C: resetClick,\r\n      \"/\": signClick,\r\n      x: signClick,\r\n      \"-\": signClick,\r\n      \"+\": signClick,\r\n      \"=\": equalsClick,\r\n      \"%\": persenClick,\r\n      \"+-\": invertClick\r\n    };\r\n    if (results[value]) {\r\n      return results[value]();\r\n    } else {\r\n      return handleClickButton();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleBtnClick}\r\n      className={`${getStyleName(value)} button`}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst ButtonBox = ({ children }) => {\r\n  return <div className=\"buttonBox\">{children}</div>;\r\n};\r\n\r\nexport default ButtonBox;\r\n","import React from \"react\";\r\n\r\nfunction Screen({ calc }) {\r\n  return (\r\n    <input\r\n      className=\"screen\"\r\n      max={70}\r\n      value={calc.num ? calc.num : calc.res}\r\n    ></input>\r\n  );\r\n}\r\nexport default Screen;\r\n","import React, { useState } from \"react\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport Button from \"./Button\";\r\nimport ButtonBox from \"./ButtonBox\";\r\nimport Screen from \"./Screen\";\r\nconst btnValues = [\r\n  [\"C\", \"+-\", \"%\", \"/\"],\r\n  [7, 8, 9, \"x\"],\r\n  [4, 5, 6, \"-\"],\r\n  [1, 2, 3, \"+\"],\r\n  [0, \".\", \"=\"]\r\n];\r\n\r\nfunction Calculator() {\r\n  const [calc, setCalc] = useState({\r\n    sign: \"\",\r\n    num: 0,\r\n    res: 0\r\n  });\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Screen calc={calc} />\r\n        <ButtonBox>\r\n          {btnValues.flat().map((btn, i) => (\r\n            <Button value={btn} key={i} calc={calc} setCalc={setCalc} />\r\n          ))}\r\n        </ButtonBox>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\nexport default Calculator;\r\n","import Calculator from \"./component/Calculator\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}